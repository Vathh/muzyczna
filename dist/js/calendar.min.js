"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function _createClass(e,t,n){return t&&_defineProperties(e.prototype,t),n&&_defineProperties(e,n),e}var Calendar=function(){function n(e,t){var a=this;_classCallCheck(this,n),this.now=new Date,this.day=this.now.getDate(),this.month=this.now.getMonth(),this.year=this.now.getFullYear(),this.input=e,this.divCnt=null,this.divTable=null,this.divDateText=null,this.divButtons=null,this.options=Object.assign({},{closeOnSelect:!1,onDateSelect:function(e,t,n){t=t+1<10?"0"+(t+1):t+1;a.input.value="".concat(e<10?"0"+e:e,"-").concat(t,"-").concat(a.year)}},t)}return _createClass(n,[{key:"createButtons",value:function(){var t=this,e=document.createElement("button");e.innerText="<",e.type="button",e.classList.add("input-prev"),e.addEventListener("click",function(e){t.month--,t.month<0&&(t.month=11,t.year--),t.createCalendarTable(),t.createDateText()}),this.divButtons.appendChild(e);e=document.createElement("button");e.classList.add("input-next"),e.innerText=">",e.type="button",e.addEventListener("click",function(e){t.month++,11<t.month&&(t.month=0,t.year++),t.createCalendarTable(),t.createDateText()}),this.divButtons.appendChild(e)}},{key:"createDateText",value:function(){this.divDateText.innerHTML=["styczeń","luty","marzec","kwiecień","maj","czerwiec","lipiec","sierpień","wrzesień","październik","listopad","grudzień"][this.month]+" "+this.year}},{key:"createCalendarTable",value:function(){this.divTable.innerHTML="";var e=document.createElement("table");e.classList.add("calendar-table");var n=document.createElement("tr");n.classList.add("calendar-table-days-names");["Pon","Wto","Śro","Czw","Pią","Sob","Nie"].forEach(function(e){var t=document.createElement("th");t.innerHTML=e,n.appendChild(t)}),e.appendChild(n);var t=new Date(this.year,this.month+1,0).getDate(),a=new Date(this.year,this.month,1).getDay(),i=t+(a=0===a?7:a)-1;a-1!=0&&(n=document.createElement("tr"),e.appendChild(n));for(var s=0;s<a-1;s++){var d=document.createElement("td");d.innerHTML="",n.appendChild(d)}for(var r=a-1;r<i;r++){r%7==0&&(n=document.createElement("tr"),e.appendChild(n));var c=document.createElement("td");c.innerText=r-a+2,c.dayNr=r-a+2,c.classList.add("day"),this.year===this.now.getFullYear()&&this.month===this.now.getMonth()&&this.day===r-a+2&&c.classList.add("current-day"),n.appendChild(c)}e.appendChild(n),this.divTable.appendChild(e)}},{key:"bindTableDaysEvent",value:function(){var t=this;this.divTable.addEventListener("click",function(e){"td"===e.target.tagName.toLowerCase()&&e.target.classList.contains("day")&&(t.options.closeOnSelect&&t.hide(),t.options.onDateSelect(e.target.dayNr,t.month+1,t.year))})}},{key:"toggleShow",value:function(){this.divCnt.classList.toggle("calendar-show")}},{key:"show",value:function(){this.divCnt.classList.add("calendar-show")}},{key:"hide",value:function(){this.divCnt.classList.remove("calendar-show")}},{key:"init",value:function(){var t=this;this.divCnt=document.createElement("div"),this.divCnt.classList.add("calendar"),this.divButtons=document.createElement("div"),this.divButtons.className="calendar-prev-next",this.createButtons(),this.divDateText=document.createElement("div"),this.divDateText.className="date-name",this.createDateText(),this.divHeader=document.createElement("div"),this.divHeader.classList.add("calendar-header"),this.divHeader.appendChild(this.divButtons),this.divHeader.appendChild(this.divDateText),this.divCnt.appendChild(this.divHeader),this.divTable=document.createElement("div"),this.divTable.className="calendar-table-cnt",this.divCnt.appendChild(this.divTable),this.createCalendarTable(),this.bindTableDaysEvent(),this.calendarWrapper=document.createElement("div"),this.calendarWrapper.classList.add("input-calendar-cnt"),this.input.parentElement.insertBefore(this.calendarWrapper,this.input),this.calendarWrapper.appendChild(this.input),this.calendarWrapper.appendChild(this.divCnt),this.input.classList.add("input-calendar"),this.input.addEventListener("click",function(e){return t.toggleShow()}),this.input.addEventListener("click",function(e){return e.stopImmediatePropagation()}),this.divCnt.addEventListener("click",function(e){return e.stopImmediatePropagation()}),document.addEventListener("click",function(e){return t.hide()})}}]),n}(),input=document.querySelector(".input-date"),cal=new Calendar(input,{closeOnSelect:!0,onDateSelect:function(e,t,n){console.log(e),console.log(t),console.log(n);input.value=(e+1<10?"0"+(e+1):e+1)-1+" "+["styczeń","luty","marzec","kwiecień","maj","czerwiec","lipiec","sierpień","wrzesień","październik","listopad","grudzień"][t-1]+" "+n}});cal.init();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
